<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">  

    <beans:bean id="myLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:constructor-arg value="/home/" />
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
                <beans:ref bean="myLogoutHandler"/>
                
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <!-- don't apply security to eXist XML-RPC endpoint, rely on eXist authentication -->
    <http pattern="/xmlrpc" security="none"/>

    <http use-expressions="true">
        
        <form-login/>
        
        <intercept-url pattern="/rest/**" access="hasRole('ROLE_ADMINISTRATOR')"/>
        
        <intercept-url pattern="/service/admin/**" access="hasRole('ROLE_ADMINISTRATOR')"/>
        <intercept-url pattern="/service/config/**" access="hasRole('ROLE_ADMINISTRATOR')"/>
        <intercept-url pattern="/service/lib/**" access="hasRole('ROLE_ADMINISTRATOR')"/>
        <intercept-url pattern="/service/plugins/**" access="hasRole('ROLE_ADMINISTRATOR')"/>
        
        <!-- force authentication for all requests to service, but delegate
            access control decisions to service -->
        <intercept-url pattern="/service/**" access="hasRole('ROLE_USER')"/>
        
        <intercept-url pattern="/home/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/uploader/**" access="hasRole('ROLE_AUTHOR')"/>
        <intercept-url pattern="/merger/**" access="hasRole('ROLE_AUTHOR')"/>
        <intercept-url pattern="/flattener/**" access="hasRole('ROLE_AUTHOR')"/>

        <custom-filter position="LOGOUT_FILTER" ref="myLogoutFilter"/>
        <session-management invalid-session-url="/home/" session-fixation-protection="none">
            <!--<concurrency-control max-sessions="-1" error-if-maximum-exceeded="true"/>-->
        </session-management>
        
    </http>
    
    <beans:bean id="myLogoutHandler" class="org.cggh.malariagen.merger.security.LogoutHandler">
        
    </beans:bean>
    
    <authentication-manager>
        <authentication-provider>
            <user-service>
                
                <user name="adam" password="test" authorities="ROLE_USER, ROLE_ADMINISTRATOR"/>
                
                <user name="bob" password="test" authorities="ROLE_USER, ROLE_AUTHOR"/>
                
                <user name="fred" password="test" authorities="ROLE_USER, ROLE_AUTHOR"/>
                
                <user name="jane" password="test" authorities="ROLE_USER"/>
                
            </user-service>
        </authentication-provider>
    </authentication-manager>
</beans:beans>