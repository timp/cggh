#summary Working Practices

= The Branch-When-Needed System =

From: http://svn.collab.net/repos/svn/trunk/doc/user/svn-best-practices.html [accessed 10 Nov 09]

(This is the system used by the Subversion project.)

Users commit their day-to-day work on /trunk.

Rule #1: /trunk must compile and pass regression tests at all times.

Rule #2: a single commit (changeset) must not be so large so as to discourage peer-review.

Rule #3: if rules #1 and #2 come into conflict (i.e. when it's impossible to make a series of small commits without disrupting the trunk), then the user should create a branch and commit a series of smaller changesets there. This allows peer-review without disrupting the stability of /trunk.

Pros: /trunk is guaranteed to be stable at all times. The hassle of branching/merging is somewhat rare.

Cons: Adds a bit of burden to users' daily work: they must compile and test before every commit.


= Repository Layout for Multiple Projects =

From: http://svnbook.red-bean.com/en/1.0/ch05s04.html [accessed 10 Nov 09]

Because Subversion uses regular directory copies for branching and tagging, the Subversion community recommends that you choose a repository location for each project root—the “top-most” directory which contains data related to that project—and then create three subdirectories beneath that root: trunk, meaning the directory under which the main project development occurs; branches, which is a directory in which to create various named branches of the main development line; tags, which is a directory of branches that are created, and perhaps destroyed, but never changed.

For example, your repository might look like:

/
   calc/
      trunk/
      tags/
      branches/
   calendar/
      trunk/
      tags/
      branches/
   spreadsheet/
      trunk/
      tags/
      branches/
   …

From TortoiseSVN Help, "The Repository" category


If a repository contains multiple projects, people often index their layout by branch: 

/trunk/paint

/trunk/calc

/branches/paint

/branches/calc

/tags/paint

/tags/calc


...or by project: 

/paint/trunk

/paint/branches

/paint/tags

/calc/trunk

/calc/branches

/calc/tags


Indexing by project makes sense if the projects are not closely related and each one is checked out individually. For related projects where you may want to check out all projects in one go, or where the projects are all tied together in a single distribution package, it is often better to index by branch. This way you have only one trunk to checkout, and the relationships between the sub-projects is more easily visible. 

----

From http://www.jmfeurprier.com/blog/2010/02/08/svn-trunk-branches-and-tags/ [accessed 08 Apr 11]


An easy comparison

Working with SVN is somewhat like growing a tree:

* a tree has a trunk and some branches

* branches grow from the trunk, and thinner branches grow from thicker branches

* a tree can grow with a trunk and no branch (but not for long)

* a tree with branches but no trunk looks more like a bundle of twigs fallen on the floor

* if the trunk is sick, so are the branches and eventually, the whole tree can die

* if a branch is sick, you can cut it, and another one may grow

* if a branch grows too much, it may become too heavy for the trunk, and the tree will fall down

* when you feel your tree, your trunk, or a branch is nice looking, you can take a picture of it to remember how nice it was that day